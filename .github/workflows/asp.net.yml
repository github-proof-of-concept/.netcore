name: Dot.Net Build and Publish

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
      - develop

  workflow_dispatch:

jobs:
  build-test-drop-artifacts:
    name: Build Test & Drop artifacts
    runs-on: ${{ matrix.environment }}
    strategy:
      matrix:
        environment:
          - ubuntu-latest
    
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages
      ProjectPath: './DotnetTemplate/DotnetTemplate.csproj'
      Configuration: 'Release'
      Solution: 'SampleWebApiAspNetCore.sln'
      ArtifactName: 'drop'
      ArtifactPath: 'publish'
      PathToTestCoverage: './DotnetTemplate.Tests/TestResults/coverage.info'
      ROOT_PATH: './actions'
      DOTNET_ROOT: './WebApp'
    
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.15
      #        with:
      #          updateAssemblyInfo: true
      #          updateAssemblyInfoFilename: 'WebApp/Properties/AssemblyInfo.cs'

      - name: Setup .NET 6.0 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: NuGet Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}.nuget.${{ hashFiles('**/*.csproj') }}

      - name: Nuget Restore
        run: dotnet restore

      - name: Build Solution
        run: |
          dotnet build ${{ env.Solution }} --configuration ${{ env.Configuration }} /p:ContinuousIntegrationBuild=true --no-restore

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        working-directory: ${{env.ROOT_PATH}}

      - name: Drop Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ArtifactName }}
          path: ${{ env.ArtifactPath }}
